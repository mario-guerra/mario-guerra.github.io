---
// Destructure the properties from Astro.props
const { title, url, class: className } = Astro.props;

// Define TypeScript interface for the properties
interface Props {
  title?: string;
  url?: string;
  class?: string;
}

// Define CSS classes for the hyperlink button
const baseClasses =
  "inline-flex items-center justify-center gap-x-2 rounded-lg px-4 py-3 text-center text-sm font-medium text-neutral-600 shadow-sm outline-none ring-zinc-500 focus-visible:ring transition duration-300";
const borderClasses = "border border-neutral-200";
const bgColorClasses = "bg-neutral-300";
const hoverClasses =
  "hover:bg-neutral-400/50 hover:text-neutral-600 active:text-neutral-700";
const disableClasses = "disabled:pointer-events-none disabled:opacity-50";
const fontSizeClasses = "2xl:text-base";
const ringClasses = "ring-zinc-500";

const darkClasses =
  "dark:border-neutral-700 dark:bg-zinc-700 dark:text-neutral-300 dark:ring-zinc-200 dark:hover:bg-zinc-600 dark:focus:outline-none";
---

<style>
.sl-link-button.secondary {
  font-family: 'Roboto', sans-serif;
  background-color: #ffeb3b !important; /* Yellow color for better contrast */
  color: var(--sl-color-black) !important;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

.sl-link-button.secondary:hover {
  background-color: #fdd835 !important; /* Darker shade for hover effect */
  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
}
</style>

<!-- Styled hyperlink -->
<a
  class={`${className} ${baseClasses} ${borderClasses} ${bgColorClasses} ${hoverClasses} ${disableClasses} ${fontSizeClasses} ${ringClasses} ${darkClasses} sl-link-button secondary`}
  href={url}
>
  {title}
</a>
